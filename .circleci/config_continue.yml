version: 2.1

orbs:
  continuation: circleci/continuation@0.1.2
  slack: circleci/slack@3.4.2
  jq: circleci/jq@2.2.0
jobs:
  test-dev-tag-as-not-passed:
    docker:
      - image: rishabhpoddar/supertokens_python_driver_testing
    steps:
      - checkout
      - run: (cd .circleci/ && ./markDevTagAsTestNotPassed.sh)
  test-unit:
    docker:
      - image: python:<< parameters.python-version >>
    resource_class: large
    parameters:
      cdi-version:
        type: string
      python-version:
        type: string
    parallelism: 4
    steps:
      - checkout
      - run: apt update && apt install -y bc jq lsof
      - run: echo "127.0.0.1 localhost.org" >> /etc/hosts
      - run: (cd .circleci/ && ./installJava.sh)
      - run: make dev-install
      - run: (cd .circleci/ && ./doUnitTests.sh << parameters.cdi-version >>)
      - store_test_results:
          path: test-results/junit.xml
      - slack/status
  test-backend-sdk-testing:
    docker:
      - image: python:<< parameters.python-version >>
    resource_class: large
    parameters:
      cdi-version:
        type: string
      fdi-version:
        type: string
      python-version:
        type: string
    steps:
      - checkout
      - run: apt update && apt install -y bc jq lsof
      - run: (cd .circleci/ && ./installJava.sh)
      - run: (cd .circleci/ && ./installNode.sh 20)
      - run: echo "127.0.0.1 localhost.org" >> /etc/hosts
      - run: python3 -m pip install -r dev-requirements.txt
      - run: (cd .circleci/ && ./doBackendSDKTests.sh << parameters.cdi-version >> << parameters.fdi-version >>)
      - slack/status
  test-website-fastapi:
    docker:
      - image: python:<< parameters.python-version >>
    resource_class: large
    parameters:
      fdi-version:
        type: string
      python-version:
        type: string
    parallelism: 4
    steps:
      - checkout
      - run: apt update && apt install -y bc jq lsof libnss3 libatk1.0-0 libatk-bridge2.0-0 libcups2 libdrm2 libxkbcommon0 libgconf-2-4 libgdk-pixbuf2.0-0 libgtk-3-0 libgbm1 libxss1 libasound2 libxshmfence1 xvfb
      - run: (cd .circleci/ && ./installJava.sh)
      - run: (cd .circleci/ && ./installNode.sh 20)
      - run: git config --global url."https://github.com/".insteadOf ssh://git@github.com/
      - run: echo "127.0.0.1 localhost.org" >> /etc/hosts
      - run: make with-fastapi
      - run: (cd .circleci/ && ./websiteFastApi.sh << parameters.fdi-version >>)
      - slack/status
  test-website-flask:
    docker:
      - image: python:<< parameters.python-version >>
    resource_class: large
    parameters:
      fdi-version:
        type: string
      python-version:
        type: string
    parallelism: 4
    steps:
      - checkout
      - run: apt update && apt install -y bc jq lsof libnss3 libatk1.0-0 libatk-bridge2.0-0 libcups2 libdrm2 libxkbcommon0 libgconf-2-4 libgdk-pixbuf2.0-0 libgtk-3-0 libgbm1 libxss1 libasound2 libxshmfence1 xvfb
      - run: (cd .circleci/ && ./installJava.sh)
      - run: (cd .circleci/ && ./installNode.sh 20)
      - run: git config --global url."https://github.com/".insteadOf ssh://git@github.com/
      - run: echo "127.0.0.1 localhost.org" >> /etc/hosts
      - run: make with-flask
      - run: (cd .circleci/ && ./websiteFlask.sh << parameters.fdi-version >>)
      - slack/status
  test-website-django:
    docker:
      - image: python:<< parameters.python-version >>
    resource_class: large
    parameters:
      fdi-version:
        type: string
      python-version:
        type: string
    parallelism: 4
    steps:
      - checkout
      - run: apt update && apt install -y bc jq lsof libnss3 libatk1.0-0 libatk-bridge2.0-0 libcups2 libdrm2 libxkbcommon0 libgconf-2-4 libgdk-pixbuf2.0-0 libgtk-3-0 libgbm1 libxss1 libasound2 libxshmfence1 xvfb
      - run: (cd .circleci/ && ./installJava.sh)
      - run: (cd .circleci/ && ./installNode.sh 20)
      - run: git config --global url."https://github.com/".insteadOf ssh://git@github.com/
      - run: echo "127.0.0.1 localhost.org" >> /etc/hosts
      - run: make with-django
      - run: (cd .circleci/ && ./websiteDjango.sh << parameters.fdi-version >>)
      - slack/status
  test-website-drf-async:
    docker:
      - image: python:<< parameters.python-version >>
    resource_class: large
    parameters:
      fdi-version:
        type: string
      python-version:
        type: string
    parallelism: 4
    steps:
      - checkout
      - run: apt update && apt install -y bc jq lsof libnss3 libatk1.0-0 libatk-bridge2.0-0 libcups2 libdrm2 libxkbcommon0 libgconf-2-4 libgdk-pixbuf2.0-0 libgtk-3-0 libgbm1 libxss1 libasound2 libxshmfence1 xvfb
      - run: (cd .circleci/ && ./installJava.sh)
      - run: (cd .circleci/ && ./installNode.sh 20)
      - run: git config --global url."https://github.com/".insteadOf ssh://git@github.com/
      - run: echo "127.0.0.1 localhost.org" >> /etc/hosts
      - run: make with-drf
      - run: (cd .circleci/ && ./websiteDrfAsync.sh << parameters.fdi-version >>)
      - slack/status
  test-website-drf-sync:
    docker:
      - image: python:<< parameters.python-version >>
    resource_class: large
    parameters:
      fdi-version:
        type: string
      python-version:
        type: string
    parallelism: 4
    steps:
      - checkout
      - run: apt update && apt install -y bc jq lsof libnss3 libatk1.0-0 libatk-bridge2.0-0 libcups2 libdrm2 libxkbcommon0 libgconf-2-4 libgdk-pixbuf2.0-0 libgtk-3-0 libgbm1 libxss1 libasound2 libxshmfence1 xvfb
      - run: (cd .circleci/ && ./installJava.sh)
      - run: (cd .circleci/ && ./installNode.sh 20)
      - run: git config --global url."https://github.com/".insteadOf ssh://git@github.com/
      - run: echo "127.0.0.1 localhost.org" >> /etc/hosts
      - run: make with-drf
      - run: (cd .circleci/ && ./websiteDrfSync.sh << parameters.fdi-version >>)
      - slack/status
  test-website-django2x:
    docker:
      - image: python:<< parameters.python-version >>
    resource_class: large
    parameters:
      fdi-version:
        type: string
      python-version:
        type: string
    parallelism: 4
    steps:
      - checkout
      - run: apt update && apt install -y bc jq lsof libnss3 libatk1.0-0 libatk-bridge2.0-0 libcups2 libdrm2 libxkbcommon0 libgconf-2-4 libgdk-pixbuf2.0-0 libgtk-3-0 libgbm1 libxss1 libasound2 libxshmfence1 xvfb
      - run: (cd .circleci/ && ./installJava.sh)
      - run: (cd .circleci/ && ./installNode.sh 20)
      - run: git config --global url."https://github.com/".insteadOf ssh://git@github.com/
      - run: echo "127.0.0.1 localhost.org" >> /etc/hosts
      - run: make with-django2x
      - run: (cd .circleci/ && ./websiteDjango2x.sh << parameters.fdi-version >>)
      - slack/status
  test-website-flask-nest-asyncio:
    docker:
      - image: python:<< parameters.python-version >>
    resource_class: large
    environment:
      SUPERTOKENS_NEST_ASYNCIO: "1"
    parameters:
      fdi-version:
        type: string
      python-version:
        type: string
    parallelism: 4
    steps:
      - checkout
      - run: apt update && apt install -y bc jq lsof libnss3 libatk1.0-0 libatk-bridge2.0-0 libcups2 libdrm2 libxkbcommon0 libgconf-2-4 libgdk-pixbuf2.0-0 libgtk-3-0 libgbm1 libxss1 libasound2 libxshmfence1 xvfb
      - run: (cd .circleci/ && ./installJava.sh)
      - run: (cd .circleci/ && ./installNode.sh 20)
      - run: git config --global url."https://github.com/".insteadOf ssh://git@github.com/
      - run: echo "127.0.0.1 localhost.org" >> /etc/hosts
      - run: make with-flask
      - run: python -m pip install nest-asyncio
      - run: (cd .circleci/ && ./websiteFlask.sh << parameters.fdi-version >>)
      - slack/status
  test-authreact-fastapi:
    docker:
      - image: python:<< parameters.python-version >>
    environment:
      MOCHA_FILE: /root/test_report/report_node-<< parameters.fdi-version >>.xml
    parameters:
      fdi-version:
        type: string
      python-version:
        type: string
    parallelism: 4
    steps:
      - checkout
      - attach_workspace:
          at: /
      - run: apt update && apt install -y bc jq lsof libnss3 libatk1.0-0 libatk-bridge2.0-0 libcups2 libdrm2 libxkbcommon0 libgconf-2-4 libgdk-pixbuf2.0-0 libgtk-3-0 libgbm1 libxss1 libasound2 libxshmfence1 xvfb
      - run: (cd .circleci/ && ./installJava.sh)
      - run: (cd .circleci/ && ./installNode.sh 20)
      - run: git config --global url."https://github.com/".insteadOf ssh://git@github.com/
      - run: echo "127.0.0.1 localhost.org" >> /etc/hosts
      - run: make with-fastapi
      - run: (cd .circleci && ./authReactFastApi.sh << parameters.fdi-version >>)
      - store_test_results:
          path: /root/test_report/report_node-<< parameters.fdi-version >>.xml
      - store_artifacts:
          path: ~/test_report/screenshots
          destination: screenshots
      - store_artifacts:
          path: ~/test_report/react-logs
          destination: react-logs
  test-authreact-flask:
    docker:
      - image: python:<< parameters.python-version >>
    resource_class: large
    environment:
      MOCHA_FILE: /root/test_report/report_node-<< parameters.fdi-version >>.xml
    parameters:
      fdi-version:
        type: string
      python-version:
        type: string
    parallelism: 4
    steps:
      - checkout
      - attach_workspace:
          at: /
      - run: apt update && apt install -y bc jq lsof libnss3 libatk1.0-0 libatk-bridge2.0-0 libcups2 libdrm2 libxkbcommon0 libgconf-2-4 libgdk-pixbuf2.0-0 libgtk-3-0 libgbm1 libxss1 libasound2 libxshmfence1 xvfb
      - run: (cd .circleci/ && ./installJava.sh)
      - run: (cd .circleci/ && ./installNode.sh 20)
      - run: git config --global url."https://github.com/".insteadOf ssh://git@github.com/
      - run: echo "127.0.0.1 localhost.org" >> /etc/hosts
      - run: make with-flask
      - run: (cd .circleci && ./authReactFlask.sh << parameters.fdi-version >>)
      - store_test_results:
          path: /root/test_report/report_node-<< parameters.fdi-version >>.xml
      - store_artifacts:
          path: ~/test_report/screenshots
          destination: screenshots
      - store_artifacts:
          path: ~/test_report/react-logs
          destination: react-logs
  test-authreact-django:
    docker:
      - image: python:<< parameters.python-version >>
    resource_class: large
    environment:
      MOCHA_FILE: /root/test_report/report_node-<< parameters.fdi-version >>.xml
    parameters:
      fdi-version:
        type: string
      python-version:
        type: string
    parallelism: 4
    steps:
      - checkout
      - attach_workspace:
          at: /
      - run: apt update && apt install -y bc jq lsof libnss3 libatk1.0-0 libatk-bridge2.0-0 libcups2 libdrm2 libxkbcommon0 libgconf-2-4 libgdk-pixbuf2.0-0 libgtk-3-0 libgbm1 libxss1 libasound2 libxshmfence1 xvfb
      - run: (cd .circleci/ && ./installJava.sh)
      - run: (cd .circleci/ && ./installNode.sh 20)
      - run: git config --global url."https://github.com/".insteadOf ssh://git@github.com/
      - run: echo "127.0.0.1 localhost.org" >> /etc/hosts
      - run: make with-django
      - run: (cd .circleci && ./authReactDjango.sh << parameters.fdi-version >>)
      - store_test_results:
          path: /root/test_report/report_node-<< parameters.fdi-version >>.xml
      - store_artifacts:
          path: ~/test_report/screenshots
          destination: screenshots
      - store_artifacts:
          path: ~/test_report/react-logs
          destination: react-logs
  test-success:
    docker:
      - image: rishabhpoddar/supertokens_python_driver_testing
    steps:
      - checkout
      - run: (cd .circleci/ && ./markAsSuccess.sh)
      - slack/status

workflows:
  version: 2
  tagged-build:
    jobs:
      - test-dev-tag-as-not-passed:
          filters:
            tags:
              only: /dev-v[0-9]+(\.[0-9]+)*/
            branches:
              only: /test-cicd\/.*/
      - test-unit:
          requires:
            - test-dev-tag-as-not-passed
          context:
            - slack-notification
          filters:
            tags:
              only: /dev-v[0-9]+(\.[0-9]+)*/
            branches:
              only: /test-cicd\/.*/
          matrix:
            parameters:
              cdi-version: placeholder
              python-version: ['3.8', '3.9', '3.10', '3.11', '3.12', '3.13']
      - test-backend-sdk-testing:
          requires:
              - test-dev-tag-as-not-passed
          context:
              - slack-notification
          filters:
              tags:
                  only: /dev-v[0-9]+(\.[0-9]+)*/
              branches:
                  only: /test-cicd\/.*/
          matrix:
              parameters:
                  cdi-version: placeholder
                  fdi-version: placeholder
                  python-version: ['3.8', '3.13']
      - test-website-fastapi:
          requires:
            - test-dev-tag-as-not-passed
          context:
            - slack-notification
          matrix:
              parameters:
                  fdi-version: placeholder
                  python-version: ['3.8', '3.13']
          filters:
            tags:
              only: /dev-v[0-9]+(\.[0-9]+)*/
            branches:
              only: /test-cicd\/.*/
      - test-website-flask:
          requires:
            - test-dev-tag-as-not-passed
          context:
            - slack-notification
          matrix:
              parameters:
                  fdi-version: placeholder
                  python-version: ['3.8', '3.13']
          filters:
            tags:
              only: /dev-v[0-9]+(\.[0-9]+)*/
            branches:
              only: /test-cicd\/.*/
      - test-website-django:
          requires:
            - test-dev-tag-as-not-passed
          context:
            - slack-notification
          matrix:
              parameters:
                  fdi-version: placeholder
                  python-version: ['3.8', '3.13']
          filters:
            tags:
              only: /dev-v[0-9]+(\.[0-9]+)*/
            branches:
              only: /test-cicd\/.*/
      - test-website-drf-async:
          requires:
            - test-dev-tag-as-not-passed
          context:
            - slack-notification
          matrix:
              parameters:
                  fdi-version: placeholder
                  python-version: ['3.8', '3.13']
          filters:
            tags:
              only: /dev-v[0-9]+(\.[0-9]+)*/
            branches:
              only: /test-cicd\/.*/
      - test-website-drf-sync:
          requires:
            - test-dev-tag-as-not-passed
          context:
            - slack-notification
          matrix:
              parameters:
                  fdi-version: placeholder
                  python-version: ['3.8', '3.13']
          filters:
            tags:
              only: /dev-v[0-9]+(\.[0-9]+)*/
            branches:
              only: /test-cicd\/.*/
      - test-website-django2x:
          requires:
            - test-dev-tag-as-not-passed
          context:
            - slack-notification
          matrix:
              parameters:
                  fdi-version: placeholder
                  python-version: ['3.8', '3.13']
          filters:
            tags:
              only: /dev-v[0-9]+(\.[0-9]+)*/
            branches:
              only: /test-cicd\/.*/
      - test-authreact-fastapi:
          requires:
            - test-dev-tag-as-not-passed
          context:
            - slack-notification
          filters:
            tags:
              only: /dev-v[0-9]+(\.[0-9]+)*/
            branches:
              only: /test-cicd\/.*/
          matrix:
            parameters:
              fdi-version: placeholder
              python-version: ['3.8', '3.13']
      - test-authreact-flask:
          requires:
            - test-dev-tag-as-not-passed
          context:
            - slack-notification
          filters:
            tags:
              only: /dev-v[0-9]+(\.[0-9]+)*/
            branches:
              only: /test-cicd\/.*/
          matrix:
            parameters:
              fdi-version: placeholder
              python-version: ['3.8', '3.13']
      - test-authreact-django:
          requires:
            - test-dev-tag-as-not-passed
          context:
            - slack-notification
          filters:
            tags:
              only: /dev-v[0-9]+(\.[0-9]+)*/
            branches:
              only: /test-cicd\/.*/
          matrix:
            parameters:
              fdi-version: placeholder
              python-version: ['3.8', '3.13']
      - test-success:
          requires:
            - test-unit
            - test-backend-sdk-testing
            - test-website-fastapi
            - test-website-flask
            - test-website-django
            - test-website-drf-async
            - test-website-drf-sync
            - test-website-django2x
            - test-authreact-fastapi
            - test-authreact-flask
            - test-authreact-django
          context:
            - slack-notification
          filters:
            tags:
              only: /dev-v[0-9]+(\.[0-9]+)*/
            branches:
              only: /test-cicd\/.*/
