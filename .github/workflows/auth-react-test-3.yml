name: Auth-React Tests - L3
on:
  workflow_call:
    inputs:
      fdi-version:
        description: "FDI Version for this set of tests"
        required: true
        type: string

      matrix:
        description: "Matrix"
        required: true
        type: string

      AUTH_REACT__LOG_DIR:
        description: AUTH_REACT__LOG_DIR
        required: true
        type: string

      AUTH_REACT__SCREENSHOT_DIR:
        description: AUTH_REACT__SCREENSHOT_DIR
        required: true
        type: string

      AUTH_REACT__APP_SERVER:
        description: AUTH_REACT__APP_SERVER
        required: true
        type: string

      AUTH_REACT__NODE_PORT:
        description: AUTH_REACT__NODE_PORT
        required: true
        type: string

      AUTH_REACT__TEST_MODE:
        description: AUTH_REACT__TEST_MODE
        required: true
        type: string

      AUTH_REACT__PORT:
        description: AUTH_REACT__PORT
        required: true
        type: string


jobs:
  test:
    if: ${{ inputs.matrix != '{"include":[]}' }}
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 10
      fail-fast: false # Don't fail fast to avoid locking TF State
      matrix: ${{ fromJson(inputs.matrix) }}

    env:
      SUPERTOKENS_CORE_PORT: 3567
      SUPERTOKENS_CORE_HOST: localhost
      TEST_MODE: testing
      # Auth react setup envs
      AUTH_REACT__LOG_DIR: ${{ inputs.AUTH_REACT__LOG_DIR }}
      AUTH_REACT__SCREENSHOT_DIR: ${{ inputs.AUTH_REACT__SCREENSHOT_DIR }}
      AUTH_REACT__APP_SERVER: ${{ inputs.AUTH_REACT__APP_SERVER }}
      AUTH_REACT__NODE_PORT: ${{ inputs.AUTH_REACT__NODE_PORT }}
      AUTH_REACT__TEST_MODE: ${{ inputs.AUTH_REACT__TEST_MODE }}
      AUTH_REACT__PORT: ${{ inputs.AUTH_REACT__PORT }}

    steps:
      - uses: actions/checkout@v4
        with:
          # Checking out to a custom path since the test repo will also be cloned
          path: supertokens-python

      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.py-version }}

      - name: Create virtual environment and install dependencies
        working-directory: supertokens-python
        # Upgrade `pip` and `setuptools` to have the latest versions before further installs
        run: |
          python3 -m venv venv
          source venv/bin/activate
          python3 -m pip install pip setuptools --upgrade
          make dev-install && rm -rf src

      - name: Start core
        working-directory: supertokens-python
        run: docker compose up --wait

      - name: Start Server (django)
        if: matrix.framework == 'django'
        working-directory: supertokens-python
        run: |
          source venv/bin/activate
          export PYTHONPATH="${PYTHONPATH}:$(pwd)"
          cd tests/auth-react/django3x

          mkdir -p $AUTH_REACT__LOG_DIR
          uvicorn mysite.asgi:application --port 8083 &> $AUTH_REACT__LOG_DIR/django.log &

      - name: Start Server (fastapi)
        if: matrix.framework == 'fastapi'
        working-directory: supertokens-python
        run: |
          source venv/bin/activate
          export PYTHONPATH="${PYTHONPATH}:$(pwd)"
          cd tests/auth-react/fastapi-server

          mkdir -p $AUTH_REACT__LOG_DIR
          uvicorn app:app --host 0.0.0.0 --port 8083 &> $AUTH_REACT__LOG_DIR/fastapi.log &

      - name: Start Server (flask)
        if: matrix.framework == 'flask'
        working-directory: supertokens-python
        run: |
          source venv/bin/activate
          export PYTHONPATH="${PYTHONPATH}:$(pwd)"
          cd tests/auth-react/flask-server

          mkdir -p $AUTH_REACT__LOG_DIR
          python3 app.py --port 8083 &> $AUTH_REACT__LOG_DIR/flask.log &

      - uses: supertokens/auth-react-testing-action@main
        with:
          fdi-version: ${{ inputs.fdi-version }}
          check-name-suffix: '[FDI=${{ inputs.fdi-version }}][Py=${{ matrix.py-version }}][Framework=${{ matrix.framework }}][Spec=${{ matrix.spec }}]'
          path: supertokens-auth-react
          spec: ${{ matrix.spec }}
